scriptencoding utf-8
set encoding=utf-8

syntax on
colorscheme itg-dark

" fix for vim-rails chruby bug
set shell=bash

" neocomplete
let g:neocomplete#enable_at_startup = 1

" vimshell
let g:vimshell_user_prompt = 'fnamemodify(getcwd(), ":~")'
let g:vimshell_prompt =  '$ '

" vim directories: backupdir, swap files
set backup
set backupdir=~/.vim/.backup//
set dir=~/.vim/.swp//

set modelines=0
set nocompatible

" airline
let g:airline_theme='tomorrow'
let g:airline#extensions#tmuxline#enabled=0

" tmuxline
let g:tmuxline_powerline_separators=1

" tabs
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
nnoremap tj :tabnext<CR>
nnoremap tk :tabprev<CR>
nnoremap tl :tabnext<CR>
nnoremap th :tabprev<CR>
nnoremap <C-t> :tabe<Space>

nmap <leader>h :%!html2haml --html-attributes --erb 2> /dev/null<CR>:set ft=haml<CR>
vmap <leader>h :!html2haml --html-attributes --erb 2> /dev/null<CR>:set ft=haml<CR>

" word separators
set iskeyword-=_,-

" EasyAlign
" Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
map <Enter> <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. <Leader>aip)
nmap <Leader>a <Plug>(EasyAlign)

" multikey mapping speed
set timeout timeoutlen=750 ttimeoutlen=75

" Delete character should not squash paste buffer
nnoremap <silent> x "_x
vnoremap <silent> x "_x

" " xp should still function as transpose
nnoremap <silent> xp xph
vnoremap <silent> xp xph

" cursor
set cursorline
set cursorcolumn

set scrolloff=3
set autoindent
set showmode
set showcmd
set hidden
set wildmode=longest,list,full
set wildmenu
set visualbell
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
set number

" search
set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
nnoremap / /\v
vnoremap / /\v
nnoremap <leader><space> :noh<cr>
nnoremap <leader>r :%s/

" leader
let mapleader = ","

" ctrlp
let g:ctrlp_show_hidden=1

set wrap
set textwidth=79
set formatoptions=qrn1

set list
set listchars=tab:â–¸\

" movement keys
" nnoremap <up> <nop>
" nnoremap <down> <nop>
" nnoremap <left> <nop>
" nnoremap <right> <nop>
" inoremap <up> <nop>
" inoremap <down> <nop>
" inoremap <left> <nop>
" inoremap <right> <nop>

" command line
nnoremap ; :

set wildignore+=*.o,*.obj,*.png,*.jpg,*.gif,**/.DS_Store,*.csv,.sass-cache/**

" easier window resizing
nnoremap ,. <C-w><
nnoremap ,p <C-w>>

"quick access to clipboard history
nmap ,yr :YRShow<CR>
imap ,yr :YRShow<CR>

" find the current file
map <silent> <C-s> :NERDTree<CR><C-w>l:NERDTreeFind<CR>

"window enter / leave hooks
"au WinEnter * :set number
"au WinLeave * :set nonumber
au WinEnter * :set cursorline
au WinLeave * :set nocursorline
au WinEnter * :set cursorcolumn
au WinLeave * :set nocursorcolumn
au WinEnter * :set colorcolumn=79
au WinLeave * :set colorcolumn=0

"buffer enter / leave hooks
"au BufWinEnter * silent! loadview
"au BufWinLeave * silent! mkview

"jshint config
let g:syntastic_javascript_jshint_args = '--config /Users/itg/.jshintrc'

" Autoclear trailing white-space and save cursor position
fun! <SID>StripTrailingWhitespaces()
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  call cursor(l, c)
endfun

autocmd FileType c,cpp,java,php,ruby,python,vim,coffee,js,html,css autocmd BufWritePre <buffer> :call <SID>StripTrailingWhitespaces()

fun! EnableAutoSave()
  let g:auto_save = 1
  set updatetime=200
endfun

fun! DisableAutoSave()
  let g:auto_save = 0
  set updatetime=4000
endfun

autocmd FileType md,markdown :call EnableAutoSave()
autocmd FileType * :call DisableAutoSave()
